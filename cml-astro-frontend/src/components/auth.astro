<script>
  import { UserManager, WebStorageStateStore } from 'oidc-client-ts';

  // OIDC client configuration (inline)
  const oidcConfig = {
    authority: 'https://auth.civmillabs.com/realms/civmillabs',
    client_id: 'cml-frontend-client',
    redirect_uri: 'https://civmillabs.com/signin-callback.html',
    post_logout_redirect_uri: 'https://civmillabs.com/',
    response_type: 'code',
    scope: 'openid profile email offline_access', // offline_access grants a refresh token
    userStore: new WebStorageStateStore({ store: window.localStorage }),
  };

  // Create UserManager instance
  const userManager = new UserManager(oidcConfig);

  // Define the signIn function and attach it to window
  window.signIn = async function signIn() {
    try {
      await userManager.signinRedirect();
    } catch (err) {
      console.error('Login failed:', err);
    }
  };

  // Define the signOut function and attach it to window
  window.signOut = async function signOut() {
    try {
      await userManager.signoutRedirect();
    } catch (err) {
      console.error('Logout failed:', err);
    }
  };

  // Check if user is logged in
  async function checkUser() {
    const user = await userManager.getUser();
    if (user) {
      document.getElementById('user-status').textContent = `Logged in as: ${user.profile.name}`;
    } else {
      document.getElementById('user-status').textContent = 'Not logged in';
    }
  }

  // Automatically check user status when the script is loaded
  checkUser();

  // Handle token expiration
  userManager.events.addAccessTokenExpiring(async () => {
    console.log('Access token is expiring, attempting refresh...');
    try {
      await userManager.signinSilent();
      console.log('Token successfully refreshed.');
    } catch (err) {
      console.error('Failed to refresh token:', err);
      userManager.signinRedirect(); // Redirect to login if refresh fails
    }
  });
</script>

<div>
  <p id="user-status">Checking login status...</p>
</div>
